(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({"./specs/CommanderApp-spec.js":[function(require,module,exports){
"use strict";

var App = require("./../app/CommanderApp.js");
var TestUtils = require("react-addons").TestUtils;

describe("App", function () {

  it("should render some text!", function () {
    var app = TestUtils.renderIntoDocument(App());
    expect(app.getDOMNode().textContent.length).toBeGreaterThan(10);
  });
});


},{"./../app/CommanderApp.js":"/Users/carl-erik.kopseng/Dropbox/Skole/master/Emissions/app/CommanderApp.js","react-addons":"react-addons"}],"/Users/carl-erik.kopseng/Dropbox/Skole/master/Emissions/app/CommanderApp.js":[function(require,module,exports){
"use strict";

var React = require("react");

var App = React.createClass({
    displayName: "App",

    render: function render() {
        return React.createElement("div", null, React.createElement("p", { id: "missionTime" }, "Oppdraget har ikke startet"), React.createElement("div", null, "Oppdragstid:", React.createElement("input", { type: "text", id: "missionLength", size: "3" }), "minutter", React.createElement("button", { id: "changeMissionTime", style: { display: "none" } }, "Endre oppdragstid"), React.createElement("button", { id: "startMission" }, "Start oppdrag")), React.createElement("button", { id: "jobFinished", style: { display: "none" } }, "Oppdrag utført"), React.createElement("div", null, React.createElement("video", { id: "astronautVideo", width: "270px", height: "180px", autoPlay: "true", loop: "true", controls: "true", muted: "true" }, React.createElement("source", { type: "video/webm" }))), React.createElement("div", null, React.createElement("button", { id: "stopButton" }, "Stopp"), React.createElement("button", { id: "astronautHappy" }, "Glad"), React.createElement("button", { id: "astronautNervous" }, "Nervøs")), React.createElement("div", null, React.createElement("button", { id: "callSecurityTeam", className: "call" }, "Ring sikkerhets-teamet"), React.createElement("br", null), React.createElement("button", { id: "callCommunicationTeam", className: "call" }, "Ring kommunikasjons-teamet"), React.createElement("span", { id: "callerId", className: "incomingCall" }, "X ringer"), React.createElement("button", { id: "answerButton", className: "incomingCall" }, "Svar"), React.createElement("button", { id: "hangUp" }, "Legg på")), React.createElement("div", null, React.createElement("video", { id: "localVideo", className: "rtcVideo", autoPlay: "true", muted: "true" }), React.createElement("video", { id: "remoteVideo", className: "rtcVideo", autoPlay: "true" })));
    }

});

module.exports = App;


},{"react":"react"}]},{},["./specs/CommanderApp-spec.js"])
//# sourceMappingURL=data:application/json;base64,
